{"version":3,"sources":["../../../../../src/modules/auth/services/strategies/rt.strategy.ts"],"sourcesContent":["import { STRATEGIES, Token } from \"@/utils\";\nimport { Inject, Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Request } from \"express\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\n\n@Injectable()\nexport class RtStrategy extends PassportStrategy(Strategy, STRATEGIES.RT) {\n  constructor(@Inject(ConfigService) private readonly config: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: config.get<string>(\"RT_SECRET\"),\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: Request, payload: Token) {\n    const rt = req.headers.authorization.split(\" \")[1];\n\n    return {\n      ...payload,\n      rt,\n    };\n  }\n}\n"],"names":["RtStrategy","PassportStrategy","Strategy","STRATEGIES","RT","validate","req","payload","rt","headers","authorization","split","constructor","config","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","ignoreExpiration","secretOrKey","get","passReqToCallback","Injectable","Inject","ConfigService"],"mappings":";;;;+BAQaA;;;eAAAA;;;uBARqB;wBACC;wBACL;0BACG;6BAEI;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGxBA,aAAN,yBAAyBC,IAAAA,0BAAgB,EAACC,qBAAQ,EAAEC,iBAAU,CAACC,EAAE;IAUtE,MAAMC,SAASC,GAAY,EAAEC,OAAc,EAAE;QAC3C,MAAMC,KAAKF,IAAIG,OAAO,CAACC,aAAa,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;QAElD,OAAO;YACL,GAAGJ,OAAO;YACVC;QACF;IACF;IAhBAI,YAAoDC,OAAuB;QACzE,KAAK,CAAC;YACJC,gBAAgBC,uBAAU,CAACC,2BAA2B;YACtDC,kBAAkB;YAClBC,aAAaL,OAAOM,GAAG,CAAS;YAChCC,mBAAmB;QACrB;+BANkDP;sBAAAA;IAOpD;AAUF;AAlBab;IADZqB,IAAAA,kBAAU;IAEIC,aAAAA,IAAAA,cAAM,EAACC,qBAAa;;;eAA2B,qBAAa,4BAAb,qBAAa;;GAD9DvB"}