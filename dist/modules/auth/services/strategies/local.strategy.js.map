{"version":3,"sources":["../../../../../src/modules/auth/services/strategies/local.strategy.ts"],"sourcesContent":["import { STRATEGIES } from \"@/utils/constants\";\nimport { HttpException, HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy } from \"passport-local\";\nimport { AuthService } from \"../auth.service\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(\n  Strategy,\n  STRATEGIES.LOCAL,\n) {\n  constructor(@Inject(AuthService) private readonly authService: AuthService) {\n    super({});\n  }\n\n  async validate(username: string, pass: string) {\n    const user = await this.authService.validateUser(username, pass);\n\n    if (!user)\n      throw new HttpException(\"Invalid credentials\", HttpStatus.UNAUTHORIZED);\n\n    return { id: user.id };\n  }\n}\n"],"names":["LocalStrategy","PassportStrategy","Strategy","STRATEGIES","LOCAL","validate","username","pass","user","authService","validateUser","HttpException","HttpStatus","UNAUTHORIZED","id","constructor","Injectable","Inject","AuthService"],"mappings":";;;;+BAOaA;;;eAAAA;;;2BAPc;wBACmC;0BAC7B;+BACR;6BACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGfA,gBAAN,4BAA4BC,IAAAA,0BAAgB,EACjDC,uBAAQ,EACRC,qBAAU,CAACC,KAAK;IAMhB,MAAMC,SAASC,QAAgB,EAAEC,IAAY,EAAE;QAC7C,MAAMC,OAAO,MAAM,IAAI,CAACC,WAAW,CAACC,YAAY,CAACJ,UAAUC;QAE3D,IAAI,CAACC,MACH,MAAM,IAAIG,qBAAa,CAAC,uBAAuBC,kBAAU,CAACC,YAAY;QAExE,OAAO;YAAEC,IAAIN,KAAKM,EAAE;QAAC;IACvB;IAXAC,YAAkDN,YAA0B;QAC1E,KAAK,CAAC,CAAC;+BADyCA;2BAAAA;IAElD;AAUF;AAhBaT;IADZgB,IAAAA,kBAAU;IAKIC,aAAAA,IAAAA,cAAM,EAACC,wBAAW;;;eAAgC,wBAAW,4BAAX,wBAAW;;GAJ/DlB"}