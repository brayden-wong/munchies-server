{"version":3,"sources":["../../../../src/modules/oauth/google/google.service.ts"],"sourcesContent":["import { Database, InjectDrizzle } from \"@/modules/drizzle\";\nimport { SessionsService } from \"@/modules/sessions\";\nimport { UsersService } from \"@/modules/users\";\nimport { GeneratorService } from \"@/modules/utils\";\nimport { cuid } from \"@/utils/functions\";\nimport { HttpException, HttpStatus, Inject, Injectable } from \"@nestjs/common\";\nimport { AuthService } from \"../../auth/services/auth.service\";\n\nimport type { CreateProfileReturnType, GoogleUser } from \"./google.types\";\nimport { AccountsService } from \"@/modules/accounts\";\n\n@Injectable()\nexport class GoogleService {\n  constructor(\n    @Inject(AccountsService)\n    private readonly accountsService: AccountsService,\n    @Inject(AuthService)\n    private readonly authService: AuthService,\n    @Inject(GeneratorService)\n    private readonly generatorService: GeneratorService,\n    @Inject(UsersService)\n    private readonly usersService: UsersService,\n  ) {}\n\n  async createProfile(profile: GoogleUser): Promise<CreateProfileReturnType> {\n    const { exists, id: existingUserId } = await this.usersService.userExists({\n      query: \"email\",\n      value: profile.email,\n    });\n\n    if (exists) {\n      const existingAccount = await this.accountsService.getAccount({\n        query: \"userId\",\n        value: existingUserId,\n      });\n\n      if (existingAccount.provider !== \"google\")\n        throw new HttpException(\n          \"Email is already associated with another account\",\n          HttpStatus.CONFLICT,\n        );\n      const { at, rt, session } = await this.authService.login(existingUserId);\n\n      return { user: null, account: null, auth: { at, rt, session } };\n    }\n\n    const userId = cuid();\n    const accountId = cuid();\n    const username = await this.generatorService.generateUsername();\n\n    const { providerId, email, provider, picture, name } = profile;\n\n    const user = {\n      id: userId,\n      username,\n      email: email.toLowerCase(),\n      name,\n    };\n\n    const newUser = await this.usersService.createUser(user);\n\n    const session = await this.authService.login(user.id);\n\n    const account = await this.accountsService.createAccount({\n      id: accountId,\n      provider,\n      providerId,\n      userId,\n    });\n\n    return { account, auth: session, user: newUser };\n  }\n}\n"],"names":["GoogleService","createProfile","profile","exists","id","existingUserId","usersService","userExists","query","value","email","existingAccount","accountsService","getAccount","provider","HttpException","HttpStatus","CONFLICT","at","rt","session","authService","login","user","account","auth","userId","cuid","accountId","username","generatorService","generateUsername","providerId","picture","name","toLowerCase","newUser","createUser","createAccount","constructor","Injectable","Inject","AccountsService","AuthService","GeneratorService","UsersService"],"mappings":";;;;+BAYaA;;;eAAAA;;;uBAVgB;uBACI;2BACZ;wBACyC;6BAClC;0BAGI;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGnBA,gBAAN;IAYL,MAAMC,cAAcC,OAAmB,EAAoC;QACzE,MAAM,EAAEC,MAAM,EAAEC,IAAIC,cAAc,EAAE,GAAG,MAAM,IAAI,CAACC,YAAY,CAACC,UAAU,CAAC;YACxEC,OAAO;YACPC,OAAOP,QAAQQ,KAAK;QACtB;QAEA,IAAIP,QAAQ;YACV,MAAMQ,kBAAkB,MAAM,IAAI,CAACC,eAAe,CAACC,UAAU,CAAC;gBAC5DL,OAAO;gBACPC,OAAOJ;YACT;YAEA,IAAIM,gBAAgBG,QAAQ,KAAK,UAC/B,MAAM,IAAIC,qBAAa,CACrB,oDACAC,kBAAU,CAACC,QAAQ;YAEvB,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEC,OAAO,EAAE,GAAG,MAAM,IAAI,CAACC,WAAW,CAACC,KAAK,CAACjB;YAEzD,OAAO;gBAAEkB,MAAM;gBAAMC,SAAS;gBAAMC,MAAM;oBAAEP;oBAAIC;oBAAIC;gBAAQ;YAAE;QAChE;QAEA,MAAMM,SAASC,IAAAA,eAAI;QACnB,MAAMC,YAAYD,IAAAA,eAAI;QACtB,MAAME,WAAW,MAAM,IAAI,CAACC,gBAAgB,CAACC,gBAAgB;QAE7D,MAAM,EAAEC,UAAU,EAAEtB,KAAK,EAAEI,QAAQ,EAAEmB,OAAO,EAAEC,IAAI,EAAE,GAAGhC;QAEvD,MAAMqB,OAAO;YACXnB,IAAIsB;YACJG;YACAnB,OAAOA,MAAMyB,WAAW;YACxBD;QACF;QAEA,MAAME,UAAU,MAAM,IAAI,CAAC9B,YAAY,CAAC+B,UAAU,CAACd;QAEnD,MAAMH,UAAU,MAAM,IAAI,CAACC,WAAW,CAACC,KAAK,CAACC,KAAKnB,EAAE;QAEpD,MAAMoB,UAAU,MAAM,IAAI,CAACZ,eAAe,CAAC0B,aAAa,CAAC;YACvDlC,IAAIwB;YACJd;YACAkB;YACAN;QACF;QAEA,OAAO;YAAEF;YAASC,MAAML;YAASG,MAAMa;QAAQ;IACjD;IA1DAG,YAEmB3B,iBAEAS,aAEAS,kBAEAxB,aACjB;+BAPiBM;+BAEAS;+BAEAS;+BAEAxB;+BANAM;2BAEAS;gCAEAS;4BAEAxB;IAChB;AAkDL;AA5DaN;IADZwC,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,yBAAe;IAEtBD,aAAAA,IAAAA,cAAM,EAACE,wBAAW;IAElBF,aAAAA,IAAAA,cAAM,EAACG,uBAAgB;IAEvBH,aAAAA,IAAAA,cAAM,EAACI,mBAAY;;;eALc,yBAAe,4BAAf,yBAAe;eAEnB,wBAAW,4BAAX,wBAAW;eAEN,uBAAgB,4BAAhB,uBAAgB;eAEpB,mBAAY,4BAAZ,mBAAY;;GATlC7C"}