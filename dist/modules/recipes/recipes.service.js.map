{"version":3,"sources":["../../../src/modules/recipes/recipes.service.ts"],"sourcesContent":["import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport {\n  Database,\n  InjectDrizzle,\n  recipes,\n  usersToRecipes,\n} from \"@/modules/drizzle\";\nimport { and, eq } from \"drizzle-orm\";\nimport {\n  CreateRecipeDto,\n  RecipeWithUserId,\n  TransformRecipeParam,\n  UpdateRecipeDto,\n} from \"./recipes.types\";\nimport { cuid } from \"@/utils/functions\";\n\n@Injectable()\nexport class RecipesService {\n  constructor(@InjectDrizzle() private readonly db: Database) {}\n\n  async createRecipe(userId: string, createRecipeDto: CreateRecipeDto) {\n    const [recipe] = await this.db\n      .insert(recipes)\n      .values({\n        ...createRecipeDto,\n        authorId: userId,\n        id: cuid(),\n      })\n      .returning();\n\n    const linkedUserId = await this.linkRecipeToUser(recipe.id, userId);\n\n    return {\n      recipe,\n      userId: linkedUserId,\n    };\n  }\n\n  async getLinkedRecipe(recipeId: string, userId: string) {\n    const recipe = await this.db.query.usersToRecipes.findFirst({\n      columns: { userId: true },\n      where: and(\n        eq(usersToRecipes.userId, userId),\n        eq(usersToRecipes.recipeId, recipeId),\n      ),\n      with: {\n        recipes: true,\n      },\n    });\n\n    if (!recipe)\n      throw new HttpException(\"Recipe not found\", HttpStatus.NOT_FOUND);\n\n    const transformedRecipe = await this.transformRecipe(recipe);\n\n    return transformedRecipe;\n  }\n\n  async getRecipes(userId: string) {\n    const result = await this.db.query.usersToRecipes.findMany({\n      columns: {\n        userId: true,\n      },\n      where: eq(usersToRecipes.userId, userId),\n      with: {\n        recipes: true,\n      },\n    });\n\n    return await this.transformRecipe(result);\n  }\n\n  async makeRecipePublic(recipeId: string, userId: string) {\n    const recipe = await this.getLinkedRecipe(recipeId, userId);\n\n    if (recipe.authorId !== userId)\n      throw new HttpException(\n        \"You are not authorized to make this recipe public\",\n        HttpStatus.UNAUTHORIZED,\n      );\n\n    const [updatedRecipe] = await this.db\n      .update(recipes)\n      .set({\n        public: true,\n        updatedAt: new Date(),\n      })\n      .where(and(eq(recipes.id, recipeId), eq(recipes.authorId, userId)))\n      .returning();\n\n    return updatedRecipe;\n  }\n\n  async makeRecipePrivate(recipeId: string, userId: string) {\n    const recipe = await this.getLinkedRecipe(recipeId, userId);\n\n    if (recipe.authorId !== userId)\n      throw new HttpException(\n        \"You are not authorized to make this recipe private\",\n        HttpStatus.UNAUTHORIZED,\n      );\n\n    const [updatedRecipe] = await this.db\n      .update(recipes)\n      .set({\n        public: false,\n        updatedAt: new Date(),\n      })\n      .where(and(eq(recipes.id, recipeId), eq(recipes.authorId, userId)))\n      .returning();\n\n    return updatedRecipe;\n  }\n\n  async updateRecipe(userId: string, updateRecipeDto: UpdateRecipeDto) {\n    const result = await this.db.transaction(async (tx) => {\n      const resultRecipe = await this.getLinkedRecipe(\n        userId,\n        updateRecipeDto.id,\n      );\n\n      if (!resultRecipe)\n        throw new HttpException(\"Recipe not found\", HttpStatus.NOT_FOUND);\n\n      const updatedRecipe = await this.transformRecipeValues(\n        resultRecipe,\n        updateRecipeDto,\n      );\n\n      const { userId: recipeUserId, recipe: recipeData } =\n        await this.extractUserId(updatedRecipe);\n\n      const [recipe] = await tx\n        .update(recipes)\n        .set({\n          ...recipeData,\n          updatedAt: new Date(),\n        })\n        .where(eq(recipes.id, updateRecipeDto.id))\n        .returning();\n\n      const { id, ...updatedRecipeData } = recipe;\n\n      return {\n        id,\n        userId,\n        ...updatedRecipeData,\n      };\n    });\n\n    return result;\n  }\n\n  async deleteRecipe(recipeId: string, userId: string) {\n    const result = await this.db.transaction(async (tx) => {\n      const resultRecipe = await this.getLinkedRecipe(recipeId, userId);\n\n      if (!resultRecipe)\n        throw new HttpException(\"Recipe not found\", HttpStatus.NOT_FOUND);\n\n      if (resultRecipe.authorId !== userId)\n        throw new HttpException(\n          \"You are not authorized to delete this recipe\",\n          HttpStatus.UNAUTHORIZED,\n        );\n\n      const [recipe] = await tx\n        .delete(recipes)\n        .where(eq(recipes.id, recipeId))\n        .returning();\n\n      return recipe;\n    });\n\n    return result;\n  }\n\n  async saveRecipe(recipeId: string, userId: string) {\n    const recipe = await this.linkRecipeToUser(recipeId, userId);\n\n    return recipe;\n  }\n\n  async unlinkRecipe(recipeId: string, userId: string) {\n    const [recipe] = await this.db\n      .delete(usersToRecipes)\n      .where(\n        and(\n          eq(usersToRecipes.recipeId, recipeId),\n          eq(usersToRecipes.userId, userId),\n        ),\n      )\n      .returning();\n\n    return {\n      recipeId: recipe.recipeId,\n      userId: recipe.userId,\n    };\n  }\n\n  private async linkRecipeToUser(recipeId: string, userId: string) {\n    try {\n      const linkedUserId = await this.db.transaction(async (tx) => {\n        const linkExists = await tx.query.usersToRecipes.findFirst({\n          where: and(\n            eq(usersToRecipes.userId, userId),\n            eq(usersToRecipes.recipeId, recipeId),\n          ),\n        });\n\n        if (linkExists) throw new Error(\"Recipe already is linked to user\");\n\n        const [value] = await tx\n          .insert(usersToRecipes)\n          .values({\n            userId,\n            recipeId,\n          })\n          .returning();\n\n        return value.userId;\n      });\n\n      return linkedUserId;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new HttpException(error.message, HttpStatus.CONFLICT);\n      }\n    }\n  }\n\n  private async transformRecipeValues(\n    currentRecipe: RecipeWithUserId,\n    updateRecipeDto: UpdateRecipeDto,\n  ) {\n    for (const [key, value] of Object.entries(updateRecipeDto)) {\n      if (key !== \"ingredients\" && key !== \"steps\") {\n        currentRecipe[key] = value;\n        continue;\n      }\n\n      if (key === \"ingredients\") {\n        const { ingredients } = updateRecipeDto;\n\n        if (!ingredients) continue;\n\n        if (!Array.isArray(ingredients)) {\n          const newIngredients = currentRecipe.ingredients.map((ingredient) => {\n            if (ingredient.id !== ingredients.id) return ingredient;\n\n            return ingredients;\n          });\n\n          currentRecipe.ingredients = newIngredients;\n          continue;\n        }\n\n        for (let i = 0; i < ingredients.length; i++) {\n          const ingredient = ingredients[i];\n\n          const index = currentRecipe.ingredients.findIndex(\n            (ingredient) => ingredient.id === ingredient.id,\n          );\n\n          if (index === -1) {\n            currentRecipe.ingredients.push(ingredient);\n            continue;\n          }\n\n          currentRecipe.ingredients[index] = ingredient;\n          continue;\n        }\n      }\n\n      if (key === \"steps\") {\n        const { steps: currentStep } = updateRecipeDto;\n\n        if (!currentStep) continue;\n\n        if (!Array.isArray(currentStep)) {\n          const newSteps = currentRecipe.steps.map((step) => {\n            if (step.id !== currentStep.id) return step;\n\n            return newSteps;\n          });\n\n          currentRecipe.steps = newSteps;\n          continue;\n        }\n\n        for (let i = 0; i < currentStep.length; i++) {\n          const step = currentStep[i];\n\n          const index = currentRecipe.steps.findIndex(\n            (currentStep) => step.id === currentStep.id,\n          );\n\n          if (index === -1) {\n            currentRecipe.steps.push(step);\n            continue;\n          }\n\n          currentRecipe.steps[index] = step;\n          continue;\n        }\n      }\n    }\n\n    return currentRecipe;\n  }\n\n  private async transformRecipe(\n    value: TransformRecipeParam,\n  ): Promise<RecipeWithUserId>;\n  private async transformRecipe(\n    value: Array<TransformRecipeParam>,\n  ): Promise<Array<RecipeWithUserId>>;\n  private async transformRecipe(\n    value: TransformRecipeParam | Array<TransformRecipeParam>,\n  ): Promise<RecipeWithUserId | Array<RecipeWithUserId>> {\n    if (!Array.isArray(value)) {\n      const { userId, recipes: recipe } = value;\n      const { id, ...restOfRecipe } = recipe;\n\n      return {\n        id,\n        userId,\n        ...restOfRecipe,\n      };\n    }\n\n    const recipes: Array<RecipeWithUserId> = [];\n\n    for (let i = 0; i < value.length; i++) {\n      const { userId, recipes: recipe } = value[i];\n      const { id, ...restOfRecipe } = recipe;\n\n      recipes.push({\n        id,\n        userId,\n        ...restOfRecipe,\n      });\n    }\n\n    return await this.sortRecipesByDate(recipes, { orderBy: \"asc\" });\n  }\n\n  private async sortRecipesByDate(\n    array: Array<RecipeWithUserId>,\n    options?: {\n      orderBy?: \"asc\" | \"desc\";\n    },\n  ) {\n    return array.sort((a, b) => {\n      const dateA = new Date(a.createdAt).getTime();\n      const dateB = new Date(b.createdAt).getTime();\n\n      if (options?.orderBy === \"asc\") return dateA - dateB;\n      else return dateB - dateA;\n    });\n  }\n\n  private async extractUserId(recipe: RecipeWithUserId) {\n    const { userId, ...restOfRecipe } = recipe;\n\n    return { userId, recipe: restOfRecipe };\n  }\n}\n"],"names":["RecipesService","createRecipe","userId","createRecipeDto","recipe","db","insert","recipes","values","authorId","id","cuid","returning","linkedUserId","linkRecipeToUser","getLinkedRecipe","recipeId","query","usersToRecipes","findFirst","columns","where","and","eq","with","HttpException","HttpStatus","NOT_FOUND","transformedRecipe","transformRecipe","getRecipes","result","findMany","makeRecipePublic","UNAUTHORIZED","updatedRecipe","update","set","public","updatedAt","Date","makeRecipePrivate","updateRecipe","updateRecipeDto","transaction","tx","resultRecipe","transformRecipeValues","recipeUserId","recipeData","extractUserId","updatedRecipeData","deleteRecipe","delete","saveRecipe","unlinkRecipe","linkExists","Error","value","error","message","CONFLICT","currentRecipe","key","Object","entries","ingredients","Array","isArray","newIngredients","map","ingredient","i","length","index","findIndex","push","steps","currentStep","newSteps","step","restOfRecipe","sortRecipesByDate","orderBy","array","options","sort","a","b","dateA","createdAt","getTime","dateB","constructor","Injectable","InjectDrizzle"],"mappings":"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"}