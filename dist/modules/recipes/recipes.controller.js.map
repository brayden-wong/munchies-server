{"version":3,"sources":["../../../src/modules/recipes/recipes.controller.ts"],"sourcesContent":["import { ROUTES } from \"@/utils/constants\";\nimport { Public, UserId } from \"@/utils/decorators\";\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Patch,\n  Post,\n  Query,\n} from \"@nestjs/common\";\nimport { RecipesService } from \"./recipes.service\";\nimport { CreateRecipeDto, UpdateRecipeDto } from \"./recipes.types\";\n\n@Controller(ROUTES.RECIPES)\nexport class RecipesController {\n  constructor(private readonly recipesService: RecipesService) {}\n\n  @Post()\n  async createRecipe(\n    @UserId()\n    userId: string,\n    @Body()\n    createRecipeDto: CreateRecipeDto,\n  ) {\n    const recipe = await this.recipesService.createRecipe(\n      userId,\n      createRecipeDto,\n    );\n\n    return {\n      status: \"ok\",\n      statusCode: 201,\n      data: recipe,\n    };\n  }\n\n  @Get()\n  async getRecipe(\n    @Query(\"recipeId\")\n    recipeId: string,\n    @UserId()\n    userId: string,\n  ) {\n    const recipe = await this.recipesService.getLinkedRecipe(recipeId, userId);\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: recipe,\n    };\n  }\n\n  @Get()\n  async getRecipes(@UserId() userId: string) {\n    const recipes = await this.recipesService.getRecipes(userId);\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: recipes,\n    };\n  }\n\n  @Patch()\n  async updateRecipe(\n    @Body()\n    updateRecipeDto: UpdateRecipeDto,\n    @UserId()\n    userId: string,\n  ) {\n    const updatedRecipe = await this.recipesService.updateRecipe(\n      userId,\n      updateRecipeDto,\n    );\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: updatedRecipe,\n    };\n  }\n\n  @Patch(\"public\")\n  async makeRecipePublic(\n    @Body(\"recipeId\")\n    recipeId: string,\n    @UserId()\n    userId: string,\n  ) {\n    const recipe = await this.recipesService.makeRecipePublic(recipeId, userId);\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: recipe,\n    };\n  }\n\n  @Patch(\"private\")\n  async makeRecipePrivate(\n    @Body(\"recipeId\")\n    recipeId: string,\n    @UserId()\n    userId: string,\n  ) {\n    const recipe = await this.recipesService.makeRecipePrivate(\n      recipeId,\n      userId,\n    );\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: recipe,\n    };\n  }\n\n  @Patch(\"save\")\n  async saveRecipe(\n    @Body(\"recipeId\")\n    recipeId: string,\n    @UserId()\n    userId: string,\n  ) {}\n\n  @Patch(\"remove\")\n  async removeRecipe(\n    @Body(\"recipeId\")\n    recipeId: string,\n    @UserId()\n    userId: string,\n  ) {}\n\n  @Delete()\n  async deleteRecipe(\n    @UserId()\n    userId: string,\n    @Body(\"recipeId\")\n    recipeId: string,\n  ) {\n    const result = await this.recipesService.deleteRecipe(recipeId, userId);\n\n    return {\n      status: \"ok\",\n      statusCode: 200,\n      data: {\n        status: \"deleted\",\n        recipe: result,\n      },\n    };\n  }\n}\n"],"names":["RecipesController","createRecipe","userId","createRecipeDto","recipe","recipesService","status","statusCode","data","getRecipe","recipeId","getLinkedRecipe","getRecipes","recipes","updateRecipe","updateRecipeDto","updatedRecipe","makeRecipePublic","makeRecipePrivate","saveRecipe","removeRecipe","deleteRecipe","result","constructor","Post","UserId","Body","Get","Query","Patch","Delete","Controller","ROUTES","RECIPES"],"mappings":"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"}