{"version":3,"sources":["../../../../src/modules/ws/rooms/rooms.service.ts"],"sourcesContent":["import { Inject, Injectable } from \"@nestjs/common\";\nimport {\n  Database,\n  InjectDrizzle,\n  rooms,\n  usersToRooms,\n} from \"@/modules/drizzle\";\nimport { cuid } from \"@/utils/functions\";\n\nimport type {\n  CreateRoomParams,\n  DatabaseRoom,\n  TransformedRoom,\n} from \"./rooms.types\";\nimport { GeneratorService } from \"@/modules/utils\";\n\n@Injectable()\nexport class RoomsService {\n  constructor(\n    @Inject(GeneratorService)\n    private readonly generatorService: GeneratorService,\n    @InjectDrizzle()\n    private readonly db: Database,\n  ) {}\n\n  async createRoom({ creatorId, users }: CreateRoomParams) {\n    const name = await this.generatorService.generateRoomName();\n    const id = cuid();\n\n    const [room] = await this.db\n      .insert(rooms)\n      .values({\n        id,\n        name,\n        creatorId,\n      })\n      .returning();\n\n    this.linkUsersToRooms([...users, creatorId], room.id);\n\n    // await this.db.delete(rooms);\n\n    return room;\n  }\n\n  async joinAllAssociatedRooms(userId: string) {\n    const rooms = await this.db.query.usersToRooms.findMany({\n      with: {\n        room: true,\n      },\n      where: (usersToRooms, { eq }) => {\n        return eq(usersToRooms.userId, userId);\n      },\n    });\n\n    return await this.transformData(rooms);\n  }\n\n  private async transformData(\n    value: Array<DatabaseRoom>,\n  ): Promise<Array<TransformedRoom>>;\n  private async transformData(value: DatabaseRoom): Promise<TransformedRoom>;\n  private async transformData(\n    value: DatabaseRoom | Array<DatabaseRoom>,\n  ): Promise<TransformedRoom | Array<TransformedRoom>> {\n    if (!Array.isArray(value)) {\n      const {\n        userId,\n        room: { id, ...room },\n      } = value;\n\n      return {\n        id,\n        userId,\n        ...room,\n      };\n    }\n\n    const rooms: Array<TransformedRoom> = [];\n\n    for (const room of value) {\n      const {\n        userId,\n        room: { id, ...roomData },\n      } = room;\n\n      rooms.push({ userId, id, ...roomData });\n    }\n\n    return rooms;\n  }\n\n  private async linkUsersToRooms(users: Array<string>, roomId: string) {\n    await this.db\n      .insert(usersToRooms)\n      .values(users.map((userId) => ({ userId, roomId })));\n  }\n}\n"],"names":["RoomsService","createRoom","creatorId","users","name","generatorService","generateRoomName","id","cuid","room","db","insert","rooms","values","returning","linkUsersToRooms","joinAllAssociatedRooms","userId","query","usersToRooms","findMany","with","where","eq","transformData","value","Array","isArray","roomData","push","roomId","map","constructor","Injectable","Inject","GeneratorService","InjectDrizzle"],"mappings":";;;;+BAiBaA;;;eAAAA;;;wBAjBsB;yBAM5B;2BACc;uBAOY;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGpBA,eAAN;IAQL,MAAMC,WAAW,EAAEC,SAAS,EAAEC,KAAK,EAAoB,EAAE;QACvD,MAAMC,OAAO,MAAM,IAAI,CAACC,gBAAgB,CAACC,gBAAgB;QACzD,MAAMC,KAAKC,IAAAA,eAAI;QAEf,MAAM,CAACC,KAAK,GAAG,MAAM,IAAI,CAACC,EAAE,CACzBC,MAAM,CAACC,cAAK,EACZC,MAAM,CAAC;YACNN;YACAH;YACAF;QACF,GACCY,SAAS;QAEZ,IAAI,CAACC,gBAAgB,CAAC;eAAIZ;YAAOD;SAAU,EAAEO,KAAKF,EAAE;QAEpD,+BAA+B;QAE/B,OAAOE;IACT;IAEA,MAAMO,uBAAuBC,MAAc,EAAE;QAC3C,MAAML,QAAQ,MAAM,IAAI,CAACF,EAAE,CAACQ,KAAK,CAACC,YAAY,CAACC,QAAQ,CAAC;YACtDC,MAAM;gBACJZ,MAAM;YACR;YACAa,OAAO,CAACH,cAAc,EAAEI,EAAE,EAAE;gBAC1B,OAAOA,GAAGJ,aAAaF,MAAM,EAAEA;YACjC;QACF;QAEA,OAAO,MAAM,IAAI,CAACO,aAAa,CAACZ;IAClC;IAMA,MAAcY,cACZC,KAAyC,EACU;QACnD,IAAI,CAACC,MAAMC,OAAO,CAACF,QAAQ;YACzB,MAAM,EACJR,MAAM,EACNR,MAAM,EAAEF,EAAE,EAAE,GAAGE,MAAM,EACtB,GAAGgB;YAEJ,OAAO;gBACLlB;gBACAU;gBACA,GAAGR,IAAI;YACT;QACF;QAEA,MAAMG,QAAgC,EAAE;QAExC,KAAK,MAAMH,QAAQgB,MAAO;YACxB,MAAM,EACJR,MAAM,EACNR,MAAM,EAAEF,EAAE,EAAE,GAAGqB,UAAU,EAC1B,GAAGnB;YAEJG,MAAMiB,IAAI,CAAC;gBAAEZ;gBAAQV;gBAAI,GAAGqB,QAAQ;YAAC;QACvC;QAEA,OAAOhB;IACT;IAEA,MAAcG,iBAAiBZ,KAAoB,EAAE2B,MAAc,EAAE;QACnE,MAAM,IAAI,CAACpB,EAAE,CACVC,MAAM,CAACQ,qBAAY,EACnBN,MAAM,CAACV,MAAM4B,GAAG,CAAC,CAACd,SAAY,CAAA;gBAAEA;gBAAQa;YAAO,CAAA;IACpD;IA9EAE,YAEmB3B,kBAEAK,GACjB;+BAHiBL;+BAEAK;gCAFAL;kBAEAK;IAChB;AA0EL;AAhFaV;IADZiC,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,uBAAgB;IAEvBC,aAAAA,IAAAA,sBAAa;;;eADqB,uBAAgB,4BAAhB,uBAAgB;eAE9B,iBAAQ,4BAAR,iBAAQ;;GALpBpC"}