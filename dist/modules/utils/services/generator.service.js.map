{"version":3,"sources":["../../../../src/modules/utils/services/generator.service.ts"],"sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport {\n  adjectives,\n  Config,\n  nouns,\n  uniqueUsernameGenerator,\n} from \"unique-username-generator\";\nimport \"node-window-polyfill/register\";\nimport \"window-crypto\";\n\n@Injectable()\nexport class GeneratorService {\n  async generateUsername(\n    config: Config = {\n      dictionaries: [adjectives, nouns],\n      randomDigits: 5,\n      length: 24,\n      separator: \" \",\n    },\n  ) {\n    return await this.transformName(uniqueUsernameGenerator(config));\n  }\n\n  async generateRoomName(\n    config: Config = {\n      dictionaries: [adjectives, nouns],\n      randomDigits: 4,\n      length: 24,\n      separator: \" \",\n    },\n  ) {\n    return await this.transformName(uniqueUsernameGenerator(config));\n  }\n\n  private async transformName(value: string) {\n    return value\n      .split(\" \")\n      .map((str) => str[0].toUpperCase() + str.slice(1))\n      .join(\"\");\n  }\n}\n"],"names":["GeneratorService","generateUsername","config","dictionaries","adjectives","nouns","randomDigits","length","separator","transformName","uniqueUsernameGenerator","generateRoomName","value","split","map","str","toUpperCase","slice","join","Injectable"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAXc;yCAMpB;QACA;QACA;;;;;;;IAGMA,mBAAN;IACL,MAAMC,iBACJC,SAAiB;QACfC,cAAc;YAACC,mCAAU;YAAEC,8BAAK;SAAC;QACjCC,cAAc;QACdC,QAAQ;QACRC,WAAW;IACb,CAAC,EACD;QACA,OAAO,MAAM,IAAI,CAACC,aAAa,CAACC,IAAAA,gDAAuB,EAACR;IAC1D;IAEA,MAAMS,iBACJT,SAAiB;QACfC,cAAc;YAACC,mCAAU;YAAEC,8BAAK;SAAC;QACjCC,cAAc;QACdC,QAAQ;QACRC,WAAW;IACb,CAAC,EACD;QACA,OAAO,MAAM,IAAI,CAACC,aAAa,CAACC,IAAAA,gDAAuB,EAACR;IAC1D;IAEA,MAAcO,cAAcG,KAAa,EAAE;QACzC,OAAOA,MACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,MAAQA,GAAG,CAAC,EAAE,CAACC,WAAW,KAAKD,IAAIE,KAAK,CAAC,IAC9CC,IAAI,CAAC;IACV;AACF;AA7BalB;IADZmB,IAAAA,kBAAU;GACEnB"}