{"version":3,"sources":["../../../../src/modules/drizzle/schemas/users.ts"],"sourcesContent":["import {\n  boolean,\n  pgTable,\n  timestamp,\n  uniqueIndex,\n  varchar,\n} from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { sessions } from \"./sessions\";\nimport { accounts } from \"./accounts\";\nimport { usersToRecipes } from \"./usersToRecipes\";\nimport { usersToRooms } from \"./usersToRooms\";\nimport { messages } from \"./messages\";\nimport { rooms } from \"./rooms\";\n\nexport const users = pgTable(\n  \"users\",\n  {\n    id: varchar(\"id\", { length: 36 }).primaryKey(),\n    name: varchar(\"name\", { length: 60 }),\n    username: varchar(\"username\", { length: 32 }).notNull(),\n    email: varchar(\"email\", { length: 60 }),\n    password: varchar(\"password\", { length: 255 }),\n\n    deactivate: boolean(\"deactivated\").notNull().default(false),\n\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\n    updatedAt: timestamp(\"updatedAt\").notNull().defaultNow(),\n    deletedAt: timestamp(\"deletedAt\").default(null),\n  },\n  (table) => {\n    return {\n      usernameIndex: uniqueIndex(\"usernameIndex\").on(table.username),\n      emailIndex: uniqueIndex(\"emailIndex\").on(table.email),\n    };\n  },\n);\n\nexport const userRelations = relations(users, ({ many, one }) => ({\n  accounts: one(accounts, {\n    fields: [users.id],\n    references: [accounts.userId],\n  }),\n  rooms: one(rooms, {\n    fields: [users.id],\n    references: [rooms.creatorId],\n  }),\n  sessions: one(sessions, {\n    fields: [users.id],\n    references: [sessions.userId],\n  }),\n  messages: many(messages),\n  usersToRecipes: many(usersToRecipes),\n  usersToRooms: many(usersToRooms),\n}));\n"],"names":["users","userRelations","pgTable","id","varchar","length","primaryKey","name","username","notNull","email","password","deactivate","boolean","default","createdAt","timestamp","defaultNow","updatedAt","deletedAt","table","usernameIndex","uniqueIndex","on","emailIndex","relations","many","one","accounts","fields","references","userId","rooms","creatorId","sessions","messages","usersToRecipes","usersToRooms"],"mappings":";;;;;;;;;;;IAeaA,KAAK;eAALA;;IAuBAC,aAAa;eAAbA;;;wBAhCN;4BACmB;0BACD;0BACA;gCACM;8BACF;0BACJ;uBACH;AAEf,MAAMD,QAAQE,IAAAA,eAAO,EAC1B,SACA;IACEC,IAAIC,IAAAA,eAAO,EAAC,MAAM;QAAEC,QAAQ;IAAG,GAAGC,UAAU;IAC5CC,MAAMH,IAAAA,eAAO,EAAC,QAAQ;QAAEC,QAAQ;IAAG;IACnCG,UAAUJ,IAAAA,eAAO,EAAC,YAAY;QAAEC,QAAQ;IAAG,GAAGI,OAAO;IACrDC,OAAON,IAAAA,eAAO,EAAC,SAAS;QAAEC,QAAQ;IAAG;IACrCM,UAAUP,IAAAA,eAAO,EAAC,YAAY;QAAEC,QAAQ;IAAI;IAE5CO,YAAYC,IAAAA,eAAO,EAAC,eAAeJ,OAAO,GAAGK,OAAO,CAAC;IAErDC,WAAWC,IAAAA,iBAAS,EAAC,aAAaP,OAAO,GAAGQ,UAAU;IACtDC,WAAWF,IAAAA,iBAAS,EAAC,aAAaP,OAAO,GAAGQ,UAAU;IACtDE,WAAWH,IAAAA,iBAAS,EAAC,aAAaF,OAAO,CAAC;AAC5C,GACA,CAACM;IACC,OAAO;QACLC,eAAeC,IAAAA,mBAAW,EAAC,iBAAiBC,EAAE,CAACH,MAAMZ,QAAQ;QAC7DgB,YAAYF,IAAAA,mBAAW,EAAC,cAAcC,EAAE,CAACH,MAAMV,KAAK;IACtD;AACF;AAGK,MAAMT,gBAAgBwB,IAAAA,qBAAS,EAACzB,OAAO,CAAC,EAAE0B,IAAI,EAAEC,GAAG,EAAE,GAAM,CAAA;QAChEC,UAAUD,IAAIC,kBAAQ,EAAE;YACtBC,QAAQ;gBAAC7B,MAAMG,EAAE;aAAC;YAClB2B,YAAY;gBAACF,kBAAQ,CAACG,MAAM;aAAC;QAC/B;QACAC,OAAOL,IAAIK,YAAK,EAAE;YAChBH,QAAQ;gBAAC7B,MAAMG,EAAE;aAAC;YAClB2B,YAAY;gBAACE,YAAK,CAACC,SAAS;aAAC;QAC/B;QACAC,UAAUP,IAAIO,kBAAQ,EAAE;YACtBL,QAAQ;gBAAC7B,MAAMG,EAAE;aAAC;YAClB2B,YAAY;gBAACI,kBAAQ,CAACH,MAAM;aAAC;QAC/B;QACAI,UAAUT,KAAKS,kBAAQ;QACvBC,gBAAgBV,KAAKU,8BAAc;QACnCC,cAAcX,KAAKW,0BAAY;IACjC,CAAA"}